#Rasa Actions and Backend Deoplyment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rasaactionsnbackend
  name: rasaactionsnbackend
  namespace: customer-1
spec:
  affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - non-gpu
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rasaactionsnbackend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rasaactionsnbackend
    spec:
      containers:
      - image: docker.io/shridhanr/action_server:latest
        imagePullPolicy: Always
        name: bonsai-rasaactions-container
        ports:
        - containerPort: 5005
        volumes:
        - name: appdata-vol
          configMap:
            name: app/data
        - name: appmodels-vol
          configMap:
            name: app/models  
      - image: docker.io/shridhanr/haystack-rasa_server:latest
        imagePullPolicy: Always
        name: bonsai-rasabackend-container
        ports:
        - containerPort: 5055          
      imagePullSecrets:
      - name: image-pull-secret
      restartPolicy: Always
---
#Rasa Actions Service
apiVersion: v1
kind: Service
metadata:
  name: np-rasaactionsnbackend
  namespace: customer-1
spec:
  type: NodePort
  ports:
  - port: 5055
    targetPort: 5055
    name: rasaactionsnbackend
    nodePort: 31055
  selector:
    app: rasaactionsnbackend
---
#Rasa Actions Service
apiVersion: v1
kind: Service
metadata:
  name: np-rasaweb
  namespace: customer-1
spec:
  type: NodePort
  ports:
  - port: 5005
    targetPort: 5005
    name: rasaactionsnbackend
    nodePort: 31505
  selector:
    app: rasaactionsnbackend
---

# RASA Haystack Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rasahaystack
  name: rasahaystack
  namespace: customer-1
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rasahaystack
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rasahaystack
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - gpu
      containers:
      - name: bonsai-rasahaystack-container
        image: docker.io/shridhanr/haystack_api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        volumes:
        - name: appdata-vol
          configMap:
            name: app/data
        - name: appmodels-vol
          configMap:
            name: app/models  
      imagePullSecrets:
      - name: image-pull-secret
      restartPolicy: Always
---
## RASA Haystack Service
apiVersion: v1
kind: Service
metadata:
  name: np-rasahaystack
  namespace: customer-1
spec:
  type: NodePort
  ports:
  - port: 8000
    targetPort: 8000
    name: rasahaystack
    nodePort: 31000
  selector:
    app: rasahaystack

---
# RASA UI Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rasaui
  name: rasaui
  namespace: customer-1
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rasaui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rasaui
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - non-gpu
      containers:
      - name: bonsai-rasaui-container
        image: docker.io/shridhanr/haystack_ui:latest
        ports:
        - containerPort: 8501
        imagePullPolicy: Always
        volumes:
        - name: appdata-vol
          configMap:
            name: app/data
        - name: appmodels-vol
          configMap:
            name: app/models  
      imagePullSecrets:
      - name: image-pull-secret
      restartPolicy: Always
---
## RASA UI Service
apiVersion: v1
kind: Service
metadata:
  name: np-rasaui
  namespace: customer-1
spec:
  type: NodePort
  ports:
  - port: 8501
    targetPort: 8501
    name: np-rasaui
    nodePort: 31501
  selector:
    app: rasaui



